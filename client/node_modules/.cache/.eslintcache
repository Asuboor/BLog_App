[{"C:\\Users\\Abrar khan\\Desktop\\The Blogs\\client\\src\\index.js":"1","C:\\Users\\Abrar khan\\Desktop\\The Blogs\\client\\src\\reportWebVitals.js":"2","C:\\Users\\Abrar khan\\Desktop\\The Blogs\\client\\src\\App.js":"3","C:\\Users\\Abrar khan\\Desktop\\The Blogs\\client\\src\\Layout.js":"4","C:\\Users\\Abrar khan\\Desktop\\The Blogs\\client\\src\\UserContext.js":"5","C:\\Users\\Abrar khan\\Desktop\\The Blogs\\client\\src\\Post.js":"6","C:\\Users\\Abrar khan\\Desktop\\The Blogs\\client\\src\\Header.js":"7","C:\\Users\\Abrar khan\\Desktop\\The Blogs\\client\\src\\pages\\IndexPage.js":"8","C:\\Users\\Abrar khan\\Desktop\\The Blogs\\client\\src\\pages\\LoginPage.js":"9","C:\\Users\\Abrar khan\\Desktop\\The Blogs\\client\\src\\pages\\RegisterPage.js":"10","C:\\Users\\Abrar khan\\Desktop\\The Blogs\\client\\src\\pages\\PostPage.js":"11","C:\\Users\\Abrar khan\\Desktop\\The Blogs\\client\\src\\pages\\CreatePost.js":"12","C:\\Users\\Abrar khan\\Desktop\\The Blogs\\client\\src\\pages\\EditPost.js":"13","C:\\Users\\Abrar khan\\Desktop\\The Blogs\\client\\src\\Editor.js":"14"},{"size":626,"mtime":1683815670740,"results":"15","hashOfConfig":"16"},{"size":362,"mtime":1683815670778,"results":"17","hashOfConfig":"16"},{"size":1026,"mtime":1683880687421,"results":"18","hashOfConfig":"16"},{"size":182,"mtime":1683815670647,"results":"19","hashOfConfig":"16"},{"size":313,"mtime":1683815670697,"results":"20","hashOfConfig":"16"},{"size":707,"mtime":1683873490402,"results":"21","hashOfConfig":"16"},{"size":1114,"mtime":1683873480480,"results":"22","hashOfConfig":"16"},{"size":450,"mtime":1683873429257,"results":"23","hashOfConfig":"16"},{"size":1336,"mtime":1683873437221,"results":"24","hashOfConfig":"16"},{"size":1019,"mtime":1683873456580,"results":"25","hashOfConfig":"16"},{"size":1763,"mtime":1683873448856,"results":"26","hashOfConfig":"16"},{"size":1513,"mtime":1683873409363,"results":"27","hashOfConfig":"16"},{"size":1834,"mtime":1683873421258,"results":"28","hashOfConfig":"16"},{"size":572,"mtime":1683815670593,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"z11war",{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48"},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52"},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65"},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69"},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73"},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Abrar khan\\Desktop\\The Blogs\\client\\src\\index.js",[],[],"C:\\Users\\Abrar khan\\Desktop\\The Blogs\\client\\src\\reportWebVitals.js",[],[],"C:\\Users\\Abrar khan\\Desktop\\The Blogs\\client\\src\\App.js",["77","78"],[],"C:\\Users\\Abrar khan\\Desktop\\The Blogs\\client\\src\\Layout.js",[],[],"C:\\Users\\Abrar khan\\Desktop\\The Blogs\\client\\src\\UserContext.js",[],[],"C:\\Users\\Abrar khan\\Desktop\\The Blogs\\client\\src\\Post.js",["79"],[],"import {formatISO9075} from \"date-fns\";\nimport {Link} from \"react-router-dom\";\n\nexport default function Post({_id,title,summary,cover,content,createdAt,author}) {\n\n  return (\n    <div className=\"post\">\n      <div className=\"image\">\n        <Link to={`/post/${_id}`}>\n          <img src={'https://blog-app-jrzx.onrender.com/'+cover} alt=\"\"/>\n        </Link>\n      </div>\n      <div className=\"texts\">\n        <Link to={`/post/${_id}`}>\n        <h2>{title}</h2>\n        </Link>\n        <p className=\"info\">\n          <a className=\"author\">{author.username}</a>\n          <time>{formatISO9075(new Date(createdAt))}</time>\n        </p>\n        <p className=\"summary\">{summary}</p>\n      </div>\n    </div>\n  );\n}","C:\\Users\\Abrar khan\\Desktop\\The Blogs\\client\\src\\Header.js",["80","81","82"],[],"import {Link} from \"react-router-dom\";\nimport {useContext, useEffect, useState} from \"react\";\nimport {UserContext} from \"./UserContext\";\n\nexport default function Header() {\n  const {setUserInfo,userInfo} = useContext(UserContext);\n  useEffect(() => {\n    fetch('https://blog-app-jrzx.onrender.com/profile', {\n      credentials: 'include',\n    }).then(response => {\n      response.json().then(userInfo => {\n        setUserInfo(userInfo);\n      });\n    });\n  }, []);\n\n  function logout() {\n    fetch('https://blog-app-jrzx.onrender.com/logout', {\n      credentials: 'include',\n      method: 'POST',\n    });\n    setUserInfo(null);\n  }\n\n  const username = userInfo?.username;\n\n  return (\n    <header>\n      <Link to=\"/\" className=\"logo\">The Blogs</Link>\n      <nav>\n        {username && (\n          <>\n            <Link to=\"/create\">New Blog</Link>\n            <a onClick={logout}>Logout ({username})</a>\n          </>\n        )}\n        {!username && (\n          <>\n            <Link to=\"/login\">Login</Link>\n            <Link to=\"/register\">Register</Link>\n          </>\n        )}\n      </nav>\n    </header>\n  );\n}\n","C:\\Users\\Abrar khan\\Desktop\\The Blogs\\client\\src\\pages\\IndexPage.js",[],[],"C:\\Users\\Abrar khan\\Desktop\\The Blogs\\client\\src\\pages\\LoginPage.js",[],[],"C:\\Users\\Abrar khan\\Desktop\\The Blogs\\client\\src\\pages\\RegisterPage.js",[],[],"C:\\Users\\Abrar khan\\Desktop\\The Blogs\\client\\src\\pages\\PostPage.js",["83"],[],"import {useContext, useEffect, useState} from \"react\";\nimport {useParams} from \"react-router-dom\";\nimport {formatISO9075} from \"date-fns\";\nimport {UserContext} from \"../UserContext\";\nimport {Link} from 'react-router-dom';\n\nexport default function PostPage() {\n  const [postInfo,setPostInfo] = useState(null);\n  const {userInfo} = useContext(UserContext);\n  const {id} = useParams();\n  useEffect(() => {\n    fetch(`https://blog-app-jrzx.onrender.com/post/${id}`)\n      .then(response => {\n        response.json().then(postInfo => {\n          setPostInfo(postInfo);\n        });\n      });\n  }, []);\n\n  if (!postInfo) return '';\n\n  return (\n    <div className=\"post-page\">\n      <h1>{postInfo.title}</h1>\n      <time>{formatISO9075(new Date(postInfo.createdAt))}</time>\n      <div className=\"author\">by @{postInfo.author.username}</div>\n      {userInfo.id === postInfo.author._id && (\n        <div className=\"edit-row\">\n          <Link className=\"edit-btn\" to={`/edit/${postInfo._id}`}>\n            <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={1.5} stroke=\"currentColor\" className=\"w-6 h-6\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M16.862 4.487l1.687-1.688a1.875 1.875 0 112.652 2.652L10.582 16.07a4.5 4.5 0 01-1.897 1.13L6 18l.8-2.685a4.5 4.5 0 011.13-1.897l8.932-8.931zm0 0L19.5 7.125M18 14v4.75A2.25 2.25 0 0115.75 21H5.25A2.25 2.25 0 013 18.75V8.25A2.25 2.25 0 015.25 6H10\" />\n            </svg>\n            Edit this post\n          </Link>\n        </div>\n      )}\n      <div className=\"image\">\n        <img src={`https://blog-app-jrzx.onrender.com/${postInfo.cover}`} alt=\"\"/>\n      </div>\n      <div className=\"content\" dangerouslySetInnerHTML={{__html:postInfo.content}} />\n    </div>\n  );\n}","C:\\Users\\Abrar khan\\Desktop\\The Blogs\\client\\src\\pages\\CreatePost.js",["84"],[],"import ReactQuill from \"react-quill\";\nimport 'react-quill/dist/quill.snow.css';\nimport {useState} from \"react\";\nimport {Navigate} from \"react-router-dom\";\nimport Editor from \"../Editor\";\n\nexport default function CreatePost() {\n  const [title,setTitle] = useState('');\n  const [summary,setSummary] = useState('');\n  const [content,setContent] = useState('');\n  const [files, setFiles] = useState('');\n  const [redirect, setRedirect] = useState(false);\n  async function createNewPost(ev) {\n    const data = new FormData();\n    data.set('title', title);\n    data.set('summary', summary);\n    data.set('content', content);\n    data.set('file', files[0]);\n    ev.preventDefault();\n    const response = await fetch('https://blog-app-jrzx.onrender.com/post', {\n      method: 'POST',\n      body: data,\n      credentials: 'include',\n    });\n    if (response.ok) {\n      setRedirect(true);\n    }\n  }\n\n  if (redirect) {\n    return <Navigate to={'/'} />\n  }\n  return (\n    <form onSubmit={createNewPost}>\n      <input type=\"title\"\n             placeholder={'Title'}\n             value={title}\n             onChange={ev => setTitle(ev.target.value)} />\n      <input type=\"summary\"\n             placeholder={'Summary'}\n             value={summary}\n             onChange={ev => setSummary(ev.target.value)} />\n      <input type=\"file\"\n             onChange={ev => setFiles(ev.target.files)} />\n      <Editor value={content} onChange={setContent} />\n      <button style={{marginTop:'5px'}}>Create post</button>\n    </form>\n  );\n}","C:\\Users\\Abrar khan\\Desktop\\The Blogs\\client\\src\\pages\\EditPost.js",["85"],[],"import {useEffect, useState} from \"react\";\nimport {Navigate, useParams} from \"react-router-dom\";\nimport Editor from \"../Editor\";\n\nexport default function EditPost() {\n  const {id} = useParams();\n  const [title,setTitle] = useState('');\n  const [summary,setSummary] = useState('');\n  const [content,setContent] = useState('');\n  const [files, setFiles] = useState('');\n  const [redirect,setRedirect] = useState(false);\n\n  useEffect(() => {\n    fetch('https://blog-app-jrzx.onrender.com/post/'+id)\n      .then(response => {\n        response.json().then(postInfo => {\n          setTitle(postInfo.title);\n          setContent(postInfo.content);\n          setSummary(postInfo.summary);\n        });\n      });\n  }, []);\n\n  async function updatePost(ev) {\n    ev.preventDefault();\n    const data = new FormData();\n    data.set('title', title);\n    data.set('summary', summary);\n    data.set('content', content);\n    data.set('id', id);\n    if (files?.[0]) {\n      data.set('file', files?.[0]);\n    }\n    const response = await fetch('https://blog-app-jrzx.onrender.com/post', {\n      method: 'PUT',\n      body: data,\n      credentials: 'include',\n    });\n    if (response.ok) {\n      setRedirect(true);\n    }\n  }\n\n  if (redirect) {\n    return <Navigate to={'/post/'+id} />\n  }\n\n  return (\n    <form onSubmit={updatePost}>\n      <input type=\"title\"\n             placeholder={'Title'}\n             value={title}\n             onChange={ev => setTitle(ev.target.value)} />\n      <input type=\"summary\"\n             placeholder={'Summary'}\n             value={summary}\n             onChange={ev => setSummary(ev.target.value)} />\n      <input type=\"file\"\n             onChange={ev => setFiles(ev.target.files)} />\n      <Editor onChange={setContent} value={content} />\n      <button style={{marginTop:'5px'}}>Update post</button>\n    </form>\n  );\n}","C:\\Users\\Abrar khan\\Desktop\\The Blogs\\client\\src\\Editor.js",[],[],{"ruleId":"86","severity":1,"message":"87","line":2,"column":8,"nodeType":"88","messageId":"89","endLine":2,"endColumn":12},{"ruleId":"86","severity":1,"message":"90","line":3,"column":8,"nodeType":"88","messageId":"89","endLine":3,"endColumn":14},{"ruleId":"91","severity":1,"message":"92","line":18,"column":11,"nodeType":"93","endLine":18,"endColumn":33},{"ruleId":"86","severity":1,"message":"94","line":2,"column":32,"nodeType":"88","messageId":"89","endLine":2,"endColumn":40},{"ruleId":"95","severity":1,"message":"96","line":15,"column":6,"nodeType":"97","endLine":15,"endColumn":8,"suggestions":"98"},{"ruleId":"91","severity":1,"message":"92","line":34,"column":13,"nodeType":"93","endLine":34,"endColumn":33},{"ruleId":"95","severity":1,"message":"99","line":18,"column":6,"nodeType":"97","endLine":18,"endColumn":8,"suggestions":"100"},{"ruleId":"86","severity":1,"message":"101","line":1,"column":8,"nodeType":"88","messageId":"89","endLine":1,"endColumn":18},{"ruleId":"95","severity":1,"message":"99","line":22,"column":6,"nodeType":"97","endLine":22,"endColumn":8,"suggestions":"102"},"no-unused-vars","'Post' is defined but never used.","Identifier","unusedVar","'Header' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","'useState' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setUserInfo'. Either include it or remove the dependency array.","ArrayExpression",["103"],"React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["104"],"'ReactQuill' is defined but never used.",["105"],{"desc":"106","fix":"107"},{"desc":"108","fix":"109"},{"desc":"108","fix":"110"},"Update the dependencies array to be: [setUserInfo]",{"range":"111","text":"112"},"Update the dependencies array to be: [id]",{"range":"113","text":"114"},{"range":"115","text":"114"},[460,462],"[setUserInfo]",[591,593],"[id]",[708,710]]